package com.yt.innerclass;
/**
 内部类包

 内部类的分类：
 成员内部类（静态、非静态 ） vs 局部内部类(方法内、代码块内、构造器内)


 静态成员内部类：

 1. 静态内部类可以访问外部类所有的静态变量和方法，即使是 private 的也一样。
 2. 静态内部类和一般类一致，可以定义静态变量、方法，构造方法等。
 3. 其它类使用静态内部类需要使用“外部类.静态内部类”方式，如下所示：Out.Inner inner =new Out.Inner();inner.print();
 4. Java集合类HashMap内部就有一个静态内部类Entry。Entry是HashMap存放元素的抽象，
 HashMap 内部维护 Entry 数组用了存放元素，但是 Entry 对使用者是透明的。像这种和外部
 类关系密切的，且不依赖外部类实例的，都可以使用静态内部类。


 成员内部类：
 成员内部类不能定义静态方法和变量（final 修饰的除外），这是因为成员内部类是非静态的，类初始化的时候先初始化静态成员，如果允许成员内
 部类定义静态变量，那么成员内部类的静态变量初始化顺序是有歧义的。

 */