package com.yt.copy;

/**
 *
 * java复制
 *
 * Java中的数据类型分为基本数据类型和引用数据类型。对于这两种数据类型，在进行赋值操作、用作方法参数或返回值时，会有值传递和引用（地址）传递的差别。
 * 基本数据类型的特点：直接存储在栈(stack)中的数据
 * 引用数据类型的特点：存储的是该对象在栈中引用，真实的数据存放在堆内存里
 *
 * 1.赋值：对于基本类型，值传递；对于引用数据类型，引用复制，指向同一对象
 * 2.浅拷贝：①对于数据类型是基本数据类型的成员变量，浅拷贝会直接进行值传递，也就是将该属性值复制一份给新的对象。
 *            因为是两份不同的数据，所以对其中一个对象的该成员变量值进行修改，不会影响另一个对象拷贝得到的数据。
 *           ②对于数据类型是引用数据类型的成员变量，比如说成员变量是某个数组、某个类的对象等，那么浅拷贝会进行引用传递，
 *           也就是只是将该成员变量的引用值（内存地址）复制一份给新的对象。因为实际上两个对象的该成员变量都指向同一个实例。
 *           在这种情况下，在一个对象中修改该成员变量会影响到另一个对象的该成员变量值。
 * 3.深拷贝：基本数据类型与浅拷贝一样，对于引用数据类型，会另外创造一个一模一样的对象，新对象跟原对象不共享内存，修改新对象不会改到原对象。
 *
 */